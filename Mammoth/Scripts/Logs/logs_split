#!/bin/bash

# Set pathing to work from any user
if [ ~ = "/root" ]; then
  PATH_PREFIX=~/../home/mammoth/Mammoth
  MAIL_PATH_PREFIX=~/../var/mail
else
 # accessed via sudo perms or mammoth user
 PATH_PREFIX=~/Mammoth
 MAIL_PATH_PREFIX=~/../../var/mail
fi

# generate the file prefix using YYYY_MM
file_prefix=$(date +"%Y_%m")
filename_root="$file_prefix""_root.log"
filename_mammoth="$file_prefix""_mammoth.log"

# if the directory we want to copy into does not exist, create it.
if [ ! -d "$PATH_PREFIX""/Logs" ]; then
  mkdir "$PATH_PREFIX""/Logs"
fi
if [ ! -d "$PATH_PREFIX""/Logs/root" ]; then
  mkdir "$PATH_PREFIX""/Logs/root"
fi
if [ ! -d "$PATH_PREFIX""/Logs/mammoth" ]; then
  mkdir "$PATH_PREFIX""/Logs/mammoth"
fi

if [ $USER = "root" ]; then
  # check if a file already exists
  if [ -e $PATH_PREFIX/Logs/root/$filename_root ]; then
    # append the existing file.
    cat $MAIL_PATH_PREFIX/root >>$PATH_PREFIX/Logs/root/$filename_root
    echo "[SPLIT]: Root mail log appended to existing file!"
  else
    # copy the root log into the new split log file.
    cp $MAIL_PATH_PREFIX/root $PATH_PREFIX/Logs/root/$filename_root
    echo "[SPLIT]: Root mail log file has been split into a new month."
  fi

  # check if a file already exists
  if [ -e $PATH_PREFIX/Logs/mammoth/$filename_mammoth ]; then
    # append the existing file.
    cat $MAIL_PATH_PREFIX/mammoth >>$PATH_PREFIX/Logs/mammoth/$filename_mammoth
    echo "[SPLIT]: Mammoth mail log appended to existing file!"
  else
    # copy the mammoth log into the new split log file.
    cp $MAIL_PATH_PREFIX/mammoth $PATH_PREFIX/Logs/mammoth/$filename_mammoth
    echo "[SPLIT]: Mammoth mail log file has been split into a new month."
  fi

  # write the null character into the original files to clear it for a new month.
  echo >$MAIL_PATH_PREFIX/root
  echo >$MAIL_PATH_PREFIX/mammoth
else
  echo "[SPLIT]: Error, run as root or with sudo."
fi
