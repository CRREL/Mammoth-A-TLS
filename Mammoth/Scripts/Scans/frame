#!/bin/bash
SCAN_DIR=/home/mammoth/Mammoth/Scans
SNOW_VAR=~/../home/mammoth/Mammoth/Scripts/Vars/snowing
SPHERE_1=~/../home/mammoth/Mammoth/Scripts/PDAL/snow-sphere.json
SPHERE_2=~/../home/mammoth/Mammoth/Scripts/PDAL/snow-sphere-2.json
lidarcollect=~/../home/mammoth/Mammoth/LidarCollect/build/LidarCollect

#extract scanner power status
if [ -e "/home/mammoth/Mammoth/Scripts/Vars/scanner_power" ]; then
  PWR_VAL=$(cat "/home/mammoth/Mammoth/Scripts/Vars/scanner_power")
else
  PWR_VAL=0
fi

# Switch the power to on, for the scanner, if necessary.
if [ $PWR_VAL = "0" ]; then
    ~/../home/mammoth/Mammoth/Scripts/GPIO/scanner_poweron
fi

# Change to the directory where file scans are to be stored to
cd $SCAN_DIR

# Conduct a basic frame scan
$lidarcollect --ip 192.168.0.128 --frame 1 50 130 0.04 110 280 0.04

# Initialize the PDAL environment for scan processing
source ~/../home/mammoth/miniconda3/etc/profile.d/conda.sh
conda activate pdal

# Use PDAL to determine the number of points within two different spheres
filename=$(ls -t *frame.rxp | head -1)
snowcount=$(pdal pipeline $SPHERE_1 --metadata=stdout --readers.rxp.filename=$filename | jq '.stages["filters.stats"].statistic [].count')
snowcount2=$(pdal pipeline $SPHERE_2 --metadata=stdout --readers.rxp.filename=$filename | jq '.stages["filters.stats"].statistic [].count')

# Determine if there are enough points to declare a snowfall event.
if [ $snowcount -gt 15 ] && [ $snowcount2 -gt 15 ]; then
  echo 1 >$SNOW_VAR
  echo "Snowing, starting line scan"
  ../Scripts/line
  # Leave the scanner on because an extended line scan will be conducted.
else
  echo 0 >$SNOW_VAR
  echo "No Snow"
  # Turn off the scanner as an extended line scan will not be conducted
  ~/../home/mammoth/Mammoth/Scripts/GPIO/scanner_poweroff
fi
