#!/bin/bash

# Set pathing to work from any user
if [ ~ = "/root" ]; then
  PATH_PREFIX=~/../home/mammoth/mammoth
else
 # accessed via sudo perms or mammoth user
 PATH_PREFIX=~/mammoth
fi

# establish directories we will be using based on user account
SCAN_DIR=$PATH_PREFIX/scans
SNOW_VAR=$PATH_PREFIX/scripts/vars/snowing
SPHERE_1=$PATH_PREFIX/scripts/pdal/snow-sphere.json
SPHERE_2=$PATH_PREFIX/scripts/pdal/snow-sphere-2.json
lidarcollect=$PATH_PREFIX/lidarcollect/build/lidarcollect
CONDA=$PATH_PREFIX/miniconda3/etc/profile.d/conda.sh
SNOWCOUNT_LOG=$PATH_PREFIX/scans/snowcount.log

# make sure write to file variables are restored if deleted.
$PATH_PREFIX/scripts/vars/vars_init

#extract scanner power status and Switch the power to on, for the scanner, if necessary.
$PATH_PREFIX/scripts/gpio/scanner_poweron

# Change to the directory where file scans are to be stored to
cd $SCAN_DIR

# Conduct a basic frame scan
$lidarcollect --ip 192.168.4.4 --frame 1 30 130 0.04 80 280 0.04

# Initialize the pdal environment for scan processing
source $CONDA
conda activate pdal

# Use pdal to determine the number of points within two different spheres
filename=$(ls -t *frame.rxp | head -1)
snowcount=$(pdal pipeline $SPHERE_1 --metadata=stdout --readers.rxp.filename=$filename | jq '.stages["filters.stats"].statistic [].count')
snowcount2=$(pdal pipeline $SPHERE_2 --metadata=stdout --readers.rxp.filename=$filename | jq '.stages["filters.stats"].statistic [].count')

# exit the pdal environment to resume normal operations
conda deactivate

# Log snowcounts to file
# Start by checking to see that the file exists, create it if it does not.
if [ ! -e "$SNOWCOUNT_LOG" ]; then
  touch "$SNOWCOUNT_LOG"
  LINE_CONTENTS="filename,snowcount,snowcount2"
  echo $LINE_CONTENTS >> $SNOWCOUNT_LOG
fi

# Structure a single line of snowcounts to write to a log file, then write it
LINE_CONTENTS="$filename"",""$snowcount"",""$snowcount2"
echo $LINE_CONTENTS >> $SNOWCOUNT_LOG

# Determine if there are enough points to declare a snowfall event.
if [ $snowcount -gt 15 ] && [ $snowcount2 -gt 15 ]; then
  echo 1 >$SNOW_VAR
  echo "[FRAME]: Snowing, starting line scan"
  $PATH_PREFIX/scripts/scans/line
  $PATH_PREFIX/scripts/scans/line_extended
else
  echo 0 >$SNOW_VAR
  echo "[FRAME]: No Snow"
fi

# Power down scanner so the power supply is not overdrawn
$PATH_PREFIX/scripts/gpio/scanner_poweroff
